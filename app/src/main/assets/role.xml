<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="id.co.hijr.app.dao.RoleDao">

	<resultMap type="role" id="roleMap" 
	    extends="id.co.hijr.app.core.Metadata.metadataMap">
		<id column="role_id" property="id"/>
		<result column="role_name" property="name"/>
		<result column="description" property="description"/>
	</resultMap>
	
	<resultMap type="role" id="roleMapExtended" extends="roleMap">		
		<collection columnPrefix="det_" property="users" ofType="user" 
		    resultMap="id.co.hijr.app.dao.UserDao.userMap" />
	</resultMap>
	
	<select id="countTrash" resultType="int" >
		select count(*) as count from tbl_role where date_deleted is not null
	</select>
	
	<select id="count" resultType="int" >
		select count(*) as count from tbl_role
	</select>
	
	<select id="newid" resultType="int" >
		select ifnull(max(role_id)+1,1) as newid from tbl_role
	</select>
	
	<sql id="qry">
		select role_id, role_name, description
		<include refid="id.co.hijr.app.core.Metadata.field"/>
		from tbl_role
	</sql>
	
	<select id="list"  resultMap="roleMap" parameterType="map">
		select * from (
		select *, (select count(*) from (<include refid="qry"/>)) as rownum from (<include refid="qry"/>)
		<if test="filter != null">
			<foreach  collection="filter"  index="key" item="clause"  open=" where "  separator=" and "  close="">
		         ${clause.column} ${clause.operator} #{clause.value} 
		    </foreach>
	    </if>
		) as tmp where date_deleted is null
		<if test="order != null">
			ORDER BY ${order}
		</if>
		
		${limit} ${offset} 
	</select>
	
	<insert id="add" parameterType="role">
		insert into tbl_role
		(role_id,role_name,description<include refid="id.co.hijr.app.core.Metadata.field"/>) 
		values 
		(#{id:NUMERIC},#{name:VARCHAR},#{description:VARCHAR}<include refid="id.co.hijr.app.core.Metadata.value"/>)
	</insert>
	
	<delete id="delete" parameterType="int">
		update tbl_role set 
		<include refid="id.co.hijr.app.core.Metadata.delete"/>
		where role_id=#{id}
	</delete>

	<delete id="deletePermanent" parameterType="int">
		delete from tbl_role where role_id=#{id}
	</delete>
	
	<delete id="restore" parameterType="int">
		update tbl_role set 
		<include refid="id.co.hijr.app.core.Metadata.restore"/>
		where role_id=#{id}
	</delete>
	
	<update id="update" parameterType="role">
		update tbl_role set 
			<include refid="id.co.hijr.app.core.Metadata.update"/>
			role_name=#{name:VARCHAR}, 
			description=#{description:VARCHAR}
		where role_id=#{id}
	</update>
	
	
	<select id="get" resultMap="roleMap" parameterType="int">
		select * from tbl_role where role_id=#{id}
	</select>
	
	<select id="getWithDetailCollection" resultMap="roleMapExtended" parameterType="int">
		select 
			role_id, role_name,			
			a.date_added
			,a.user_added
			,a.date_modified
			,a.user_modified
			,a.date_deleted
			,a.user_deleted
			
			,user_id det_user_id
			, real_name det_real_name
			, user_name det_user_name
			, password det_password
			, a.description det_description
			, token det_token
			, expired det_expired
			,b.date_added det_date_added
			,b.user_added det_user_added
			,b.date_modified det_date_modified
			,b.user_modified det_user_modified
			,b.date_deleted det_date_deleted
			,b.user_deleted det_user_deleted
		from tbl_role a inner join tbl_user b on a.role_id=b.role 
		where role_id=#{id}
	</select>
	
	<!-- Menghapus permanent data yang statusnya deleted -->
	<delete id="clean">
		delete from tbl_role where date_deleted is not null
	</delete>
	
	<!-- Mengosongkan isi tabel (semua data) -->
	<delete id="empty">
	    delete from tbl_role
	</delete>	
	
	<!-- you can add custom SQL here -->	
	
</mapper>	