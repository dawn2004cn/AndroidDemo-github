

void libyuvI420ToRGBA(unsigned char *src, unsigned char *dst, int width, int height) {
    unsigned char *pY = src;
    unsigned char *pU = src + width * height;
    unsigned char *pV = src + width * height * 5 / 4;
    libyuv::I420ToABGR(pY, width, pU, width >> 1, pV, width >> 1, dst, width * 4, width, height);
}

void libyuvYV12ToRGBA(unsigned char *src, unsigned char *dst, int width, int height) {
    unsigned char *pY = src;
    unsigned char *pU = src + width * height * 5 / 4;
    unsigned char *pV = src + width * height;
    libyuv::I420ToABGR(pY, width, pU, width >> 1, pV, width >> 1, dst, width * 4, width, height);
}

void libyuvNV12ToRGBA(unsigned char *src, unsigned char *dst, int width, int height) {
    unsigned char *pY = src;
    unsigned char *pUV = src + width * height;
    libyuv::NV21ToARGB(pY, width, pUV, width, dst, width * 4, width, height);
}

void libyuvNV21ToRGBA(unsigned char *src, unsigned char *dst, int width, int height) {
    unsigned char *pY = src;
    unsigned char *pUV = src + width * height;
    libyuv::NV12ToARGB(pY, width, pUV, width, dst, width * 4, width, height);
}

void libyuvRotateRGB(unsigned char *src, unsigned char *dst, int width, int height, float degree) {
    if (degree == 90.0f) {
        libyuv::ARGBRotate(src, width * 3, dst, height * 3, width, height, libyuv::kRotate90);
    } else if (degree == 180.0f) {
        libyuv::ARGBRotate(src, width * 3, dst, width * 3, width, height, libyuv::kRotate180);
    } else if (degree == 270.0f) {
        libyuv::ARGBRotate(src, width * 3, dst, height * 3, width, height, libyuv::kRotate270);
    } else {
        return;
    }
}

void libyuvRotateRGBA(unsigned char *src, unsigned char *dst, int width, int height, float degree) {
    if (degree == 90.0f) {
        libyuv::ARGBRotate(src, width * 4, dst, height * 4, width, height, libyuv::kRotate90);
    } else if (degree == 180.0f) {
        libyuv::ARGBRotate(src, width * 4, dst, width * 4, width, height, libyuv::kRotate180);
    } else if (degree == 270.0f) {
        libyuv::ARGBRotate(src, width * 4, dst, height * 4, width, height, libyuv::kRotate270);
    } else {
        return;
    }
}

void libyuvRotateYUV420P(unsigned char *src, unsigned char *dst, int width, int height, float degree) {
    unsigned char *pSrcY = src;
    unsigned char *pSrcU = src + width * height;
    unsigned char *pSrcV = src + width * height * 5 / 4;

    unsigned char *pDstY = dst;
    unsigned char *pDstU = dst + width * height;
    unsigned char *pDstV = dst + width * height * 5 / 4;

    if (degree == 90.0f) {
        libyuv::I420Rotate(pSrcY, width, pSrcU, width >> 1, pSrcV, width >> 1,
                           pDstY, height, pDstU, height >> 1, pDstV, height >> 1,
                           width, height, libyuv::kRotate90);
    } else if (degree == 180.0f) {
        libyuv::I420Rotate(pSrcY, width, pSrcU, width >> 1, pSrcV, width >> 1,
                           pDstY, width, pDstU, width >> 1, pDstV, width >> 1,
                           width, height, libyuv::kRotate180);
    } else if (degree == 270.0f) {
        libyuv::I420Rotate(pSrcY, width, pSrcU, width >> 1, pSrcV, width >> 1,
                           pDstY, height, pDstU, height >> 1, pDstV, height >> 1,
                           width, height, libyuv::kRotate270);
    } else {
        return;
    }
}

void libyuvRotateYUV420SP(unsigned char *src, unsigned char *dst, int width, int height, float degree) {
    unsigned char *pSrcY = src;
    unsigned char *pSrcUV = src + width * height;

    unsigned char *pDstY = dst;
    unsigned char *pDstUV = dst + width * height;

    unsigned char *pTmp = new unsigned char[width * height * 3 / 2];
    unsigned char *pTmpY = pTmp;
    unsigned char *pTmpU = pTmp + width * height;
    unsigned char *pTmpV = pTmp + width * height * 5 / 4;

    if (degree == 90.0f) {
        NV12ToI420Rotate(pSrcY, width, pSrcUV, width,
                         pTmpY, height, pTmpU, height >> 1, pTmpV, height >> 1,
                         width, height, libyuv::kRotate90);
        libyuv::I420ToNV12(pTmpY, height, pTmpU, height >> 1, pTmpV, height >> 1,
                           pDstY, height, pDstUV, height, height, width);
    } else if (degree == 180.0f) {
        NV12ToI420Rotate(pSrcY, width, pSrcUV, width,
                         pTmpY, width, pTmpU, width >> 1, pTmpV, width >> 1,
                         width, height, libyuv::kRotate180);
        libyuv::I420ToNV12(pTmpY, width, pTmpU, width >> 1, pTmpV, width >> 1,
                           pDstY, width, pDstUV, width, width, height);
    } else if (degree == 270.0f) {
        NV12ToI420Rotate(pSrcY, width, pSrcUV, width,
                         pTmpY, height, pTmpU, height >> 1, pTmpV, height >> 1,
                         width, height, libyuv::kRotate270);
        libyuv::I420ToNV12(pTmpY, height, pTmpU, height >> 1, pTmpV, height >> 1,
                           pDstY, height, pDstUV, height, height, width);
    }
    delete[] pTmp;
}